<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<groupId>com.universalmediaserver</groupId>
	<artifactId>crowdin-maven-plugin</artifactId>
	<version>0.3-SNAPSHOT</version>
	<packaging>maven-plugin</packaging>

	<name>Crowdin Maven Plugin</name>

	<description>This plugin allows Maven projects to be translated using crowdin and has been tailored to use for the Universal Media Server project.</description>
	<url>http://github.com/UniversalMediaServer/ums-crowdin</url>

	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<scm>
		<connection>scm:git:git@github.com:UniversalMediaServer/ums-crowdin.git</connection>
		<developerConnection>scm:git:git@github.com:UniversalMediaServer/ums-crowdin.git</developerConnection>
		<url>http://github.com/UniversalMediaServer/ums-crowdin</url>
	</scm>

	<developers>
		<developer>
			<id>Nadahar</id>
			<timezone>1</timezone>
			<url>http://github.com/Nadahar</url>
		</developer>
	</developers>
	<contributors>
		<contributor>
			<name>Gabriel Landais</name>
			<email>gabriel.landais@gmail.com</email>
			<roles>
				<role>Original developer</role>
			</roles>
		</contributor>
	</contributors>

	<issueManagement>
		<system>GitHub</system>
		<url>https://github.com/UniversalMediaServer/ums-crowdin/issues</url>
	</issueManagement>    

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<pluginPluginVersion>3.3</pluginPluginVersion>
		<javadocPluginVersion>2.10.3</javadocPluginVersion>
		<apacheHttpClientVersion>4.2.6</apacheHttpClientVersion>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-project</artifactId>
			<version>2.2.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-plugin-api</artifactId>
			<version>3.3.3</version>
		</dependency>
		<dependency>
			<groupId>org.jdom</groupId>
			<artifactId>jdom</artifactId>
			<version>1.1.3</version>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>${apacheHttpClientVersion}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpmime</artifactId>
			<version>${apacheHttpClientVersion}</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.4</version>
		</dependency>
		<dependency>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-dependency-plugin</artifactId>
			<version>2.10</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jgit</groupId>
			<artifactId>org.eclipse.jgit</artifactId>
			<version>4.1.0.201509280440-r</version>
		</dependency>
	</dependencies>
	
	<distributionManagement>
		<!-- 
		Repository to be uploaded to during the deploy phase. Ftp, sftp and scp are supported.
		The "id" parameter must match a "server" entry in Maven configuration (e.g. ~/.m2/settings.xml)
		where username and password are provided.  
		-->
		<!-- <repository>
			<id>superbum.org</id>
			<url>sftp://sftp.domeneshop.no/home/4/s/superbum/www/downloads/maven</url>
		</repository> -->
		<repository>
			<id>universalmediaserver.com</id>
			<url>sftp://universalmediaserver.com</url>
		</repository>
	</distributionManagement>

	<!--
		If you get an "execution not covered by lifecycle configuration: org.apache.maven.plugins:maven-plugin-plugin"
		below in Eclipse, the solution is to go to Preferences -> Maven -> Discovery -> Open Catalog and install
		"Eclipse Plug-in Development Environment"
	 -->
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-plugin-plugin</artifactId>
				<version>${pluginPluginVersion}</version>
				<configuration>
					<goalPrefix>crowdin</goalPrefix>
				</configuration>
				<executions>
					<execution>
						<id>generated-helpmojo</id>
						<goals>
							<goal>helpmojo</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<extensions>
			<!-- 
				Only one of the wagon providers is needed, depending on the protocol used to upload the plugin
				to the repository. wagon-ftp supports ftp and wagon-ssh supports sftp and scp. 
			-->
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-ftp</artifactId>
				<version>2.10</version>
			</extension>
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-ssh</artifactId>
				<version>2.10</version>
			</extension>
		</extensions>		
	</build>

	<profiles>
		<profile>
			<id>release-sign-artifacts</id>
			<activation>
				<property>
					<name>performRelease</name>
					<value>true</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<version>1.6</version>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>

